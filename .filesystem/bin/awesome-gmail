#!/bin/sh
# awesome-gmail-nag for awesome-2.3 by ljcohen 04 July 2008
# lines like the one below are test code - uncomment for debugging
## test commands ## any comments about test commands
#
# You need the following in your .awesomerc section "statusbar mystatusbar"
# textbox gmail {
#     text_align = "center"  mouse { button = "1" command = "spawn" arg = "exec touch /dev/shm/gmail-ack-$USER" }
#               }
# You can run multiple account checks in the same textbox. Just offset them in your
# .xinitrc or .xprofile like this (see usage below):
# /usr/bin/awesome-gmail-nag firstaccount password 6 & # start first account
# ( sleep 3m ; /usr/bin/awesome-gmail-nag nextaccount password 6 & ) & # start next account
#
############ code starts here ###########
 if [ $# -ne 3 ]; then #
    echo Usage: $(basename $0) username password interval-in-minutes
    exit 1
 fi
#
 until [ -S ~/.awesome_ctl.0 ] ; do  # wait until awesome starts (if started in .xinitrc for example)
   sleep 2s
 done
###### real stuff starts here ############
 GMUSER=$1
 PASSWD=$2
 INTERVAL=$3
 CFILE=/dev/shm/gmail-ack-$USER	# file exists only when alert acknowledged
 GURL="https://mail.google.com/mail/feed/atom"  # feed url
#
 while [ -S ~/.awesome_ctl.0 ] ; do  # exit if awesome is not running
  # use line below if package ca-certificates is not installed - MAY BE SECURITY RISK!
  # MCOUNT=$(wget -qO- --no-check-certificate --http-user=$GMUSER --http-password=$PASSWD $GURL | grep fullcount)
  MCOUNT=$(wget -qO- --http-user=$GMUSER --http-password=$PASSWD $GURL | grep fullcount)
  ## echo $MCOUNT ## looks like <fullcount>36</fullcount>
  MCOUNT=`expr substr "$MCOUNT" 12 1` # just get first digit
  ## echo Count=$MCOUNT ##
  if [ $MCOUNT -ne 0 2>/dev/null ] ; then # you got mail!
     rm -f $CFILE		  # loose it (false acknowledgement)
	while [ ! -f $CFILE ] ; do # flash the statusbar textbox
	     echo 0 widget_tell mystatusbar gmail text " [*******] " | awesome-client
	     # beep -f 1000
	     sleep 2
	     echo 0 widget_tell mystatusbar gmail text " [$GMUSER] " | awesome-client
	     sleep 2
        done
      rm -f $CFILE # get rid of alert acknowledgement file
  fi
  ##  date ## for checking sleep interval
  # line below clears textbox
  echo 0 widget_tell mystatusbar gmail text "" | awesome-client
  sleep $INTERVAL"m"  # wait for next check
 done
#
 exit 0
