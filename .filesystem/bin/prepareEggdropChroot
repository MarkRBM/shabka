#!/usr/bin/env bash
#
#   vim:ft=sh:fenc=UTF-8:ts=4:sts=4:sw=4:expandtab:foldmethod=marker:foldlevel=0:
#
#   $Id$
#
#   Copyright (c) 2007 Wael Nasreddine <wael.nasreddine@gmail.com>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
#   USA.
#

####
# Functions

# If you want to define a specific help for this script
#function help()
#{
#    # print_info goes here
#}

function prepareFolder()
{
    if [ -f "/in_chroot" ]; then
        return 1
    fi
    if [ -f "${chroot_path}/in_chroot" ]; then
        return 1
    fi

    mkdir -p "${chroot_path}"
    cd "${chroot_path}"
    wget ${mirror}/releases/${arch}/current-stage3/${stage} || return 1
    tar xjpf ${stage} || return 1
    rm ${stage}
    cd usr
    wget ${mirror}/releases/snapshots/current/portage-latest.tar.bz2 || return 1
    tar xjpf portage-latest.tar.bz2 || return 1
    rm portage-latest.tar.bz2
    cp -L /etc/resolv.conf "${chroot_path}/etc/resolv.conf" || return 1
    rm "${chroot_path}/etc/make.profile"
    ln -sf ../usr/portage/profiles/default/linux/x86/10.0 "${chroot_path}/etc/make.profile"

    touch "${chroot_path}/in_chroot"
}

function mountRequired()
{
    if [ -f "/in_chroot" ]; then
        return 1
    fi
    if [ -f "${chroot_path}/in_chroot" ]; then
        return 1
    fi

    mount -t proc proc ${chroot_path}/proc || return 1
    mount -t sysfs sysfs ${chroot_path}/sys || return 1
    mount --bind /dev ${chroot_path}/dev || return 1
    mount -t tmpfs tmpfs ${chroot_path}/tmp -O nodev,nosuid,size=500m,mode=1777 || return 1
}

function needChroot()
{
    if [ ! -f /in_chroot ]; then
        echo "can't run outside of chroot, call it from inside the chroot."
        exit 1
    fi
}

function needNewChroot()
{
    if [ -f /installed ]; then
        echo "can't run on an already installed chroot"
        exit 1
    fi
}

function installRequired()
{
    # Only from the chroot
    needChroot

    # Only if not installed
    needNewChroot

    # Install layman
    emerge portage || return 1
    emerge app-portage/gentoolkit dev-util/git app-portage/layman app-portage/eix || return 1

    # Add layman file to /etc/make.conf
    echo 'source /usr/local/portage/layman/make.conf' >> /etc/make.conf

    # Add sabayon
    layman -S || return 1
    layman -a sabayon || return 1

    # Update eix
    eix-update || return 1

    touch /installed
}

function gentooSync()
{
    # Only from the chroot
    needChroot

    # Sync the packages
    emerge --sync || return 1
}

#
####

####
# Main

# Environment
chroot_path="/home/chroot/eggdrop-sabayon"
arch="x86"
version="2008.0"
stage="stage3-i686-20091020.tar.bz2"
mirror="http://mirrors.linuxant.fr/distfiles.gentoo.org"

if [ `id -u` -ne 0 ]; then
    echo "Can't run unless you're root"
    exit 1
fi

if [ ! -f "${chroot_path}/installed" -a ! -f "/in_chroot" ]; then

    # Prepare the folder
    prepareFolder
    mountRequired

    # update the env
    chroot ${chroot_path} "env-update"

    # copy the script to the new chroot and run it from there
    cp -L $0 ${chroot_path}/usr/local/bin
    chroot ${chroot_path} "/usr/local/bin/`basename $0`"
fi


if [ ! -f "/installed" -a -f "/in_chroot" ]; then
    gentooSync
    installRequired
fi


#
####
