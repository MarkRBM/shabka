#!/usr/bin/env bash
#
#   vim:ft=sh:fenc=UTF-8:ts=4:sts=4:sw=4:expandtab:foldmethod=marker:foldlevel=0:
#
#   $Id: RetrainSpamassassin 789 2008-03-24 13:02:06Z wael $
#
#   Copyright (c) 2007 Wael Nasreddine <wael.nasreddine@gmail.com>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
#   USA.
#

# Bootstrap{{{
bootstrap="`dirname $0`/.bootstrap"
if [ -f "${bootstrap}" ]; then
    source "${bootstrap}"
else
    echo "Cannot bootstrap"
    exit 54
fi
unset bootstrap
#}}}

####
# Functions

train_dir()
{
    [[ "${#}" -lt "2" ]] && return 1
    local type="${1}"
    local dir="${2}"
    if isTrue "${DEBUG}"; then
        sa-learn "--${type}" --progress "${dir}"
    else
        sa-learn "--${type}" "${dir}" &> /dev/null
    fi
}

MAILDIR="/home/wael/.mail"

print_info 0 "Retraining spamassassin, continue [y/n] : " false
read -sn 1 answer; echo

if ! isTrue "${answer}"; then
    exit 0
fi

if [ "${1}" = "-d" ]; then
    DEBUG=true
else
    DEBUG=false
fi

# Clearing the database.
print_info 2 "Cleaning the database."
sa-learn --clear

# Train Spam Messages
for i in .Spam .Spam.Missed; do
    print_info 2 "Training Spam folder '${i}'."
    print_info 3 "Training sub-folder 'cur'."
    train_dir "spam" "${MAILDIR}/${i}/cur"
    print_info 3 "Training sub-folder 'new'."
    train_dir "spam" "${MAILDIR}/${i}/new"
    print_info 3 "Training sub-folder 'tmp'."
    train_dir "spam" "${MAILDIR}/${i}/tmp"
done

# Train Ham Messages
for i in $MAILDIR/.??*; do
    for j in .Spam .Spam.Missed .Spam.Unsure .Sent .Drafts .Trash; do
        if [ "$i" == "$MAILDIR/${j}" ]; then
            continue 2
        fi
    done
    print_info 2 "Training Ham folder '${i}'."
    print_info 3 "Training sub-folder 'cur'."
    train_dir "ham" "${i}/cur"
    print_info 3 "Training sub-folder 'new'."
    train_dir "ham" "${i}/new"
    print_info 3 "Training sub-folder 'tmp'."
    train_dir "ham" "${i}/tmp"
done
