#!/usr/bin/env bash
#
#   vim:ft=sh:fenc=UTF-8:ts=4:sts=4:sw=4:expandtab:foldmethod=marker:foldlevel=0:
#
#   $Id: freerecord 783 2008-03-24 12:20:18Z wael $
#
#   freerecord:
#
#   This script will make life easier when recording from FreeTV
#   Using VLC streaming
#
#   Requirement:
#       - Free.fr subscription and the PC must be connected to the network
#         using the Freebox.
#       - Your "Multiposte" must be working propely, if you are behind firewall
#         you might want to edit ~/.vlc/vlcrc, uncomment rtp-client-port and
#         set it to a random port, then open the port you set in rtp-client-port
#         and then one right before it towards the pc you are recording from
#         the protocol used for streaming is UDP
#
#   Copyright (c) 2007 by Wael Nasreddine <wael@nasreddine.com>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
#   USA.
#

DESTDIR="/home/wael/Files/TV"
# Channel List from http://mafreebox.freebox.fr/freeboxtv/playlist.m3u
ChanList=(
            "2:France_2:201"
            "6:M6:613"
            "9:W9:373"
            "12:NRJ_12:382"
            "17:Europe_2:416"
            "18:Gulli:419"
            "21:RTL9:210"
            "22:AB1:211"
            "44:MTV:219"
            "46:MTV_BASE:230"
            "270:Al_Masriya:275"
            "273:ART_Variety_Europe:326"
            "275:ART_Movies:328"
            "277:Al_Hekayat:330"
            "279:ART_Aflam_2:332"
        )

# Set the Volume
volume="1024"

# Set the used mux
mux="mpeg1"

# Transcode the Recording ?
TRANSCODE="yes"

# If Transcode equal yes you have to set the below values
vcodec="mp2v"
video_bitrate="1024"
scale="1"
audio_codec="mp3"
audio_bitrate="192"
channels="2"

Now="$(date "+%F-%H-%M-%S")"

usage()
{
    echo "Usage: $0 <action> [args]"
    echo "  list                                        List Channels"
    echo "  record chan-num     [minutes to record]     Record the channel number chan-num"
    echo "  stop                                        Stop the current recording session"
}

list()
{
    echo -e "Channel Number\t\tChannel Name"
    for i in ${ChanList[@]}; do
        chan_num="$(echo $i | cut -d ":" -f1)"
        chan_name="$(echo $i | cut -d ":" -f2)"
        echo -e "${chan_num}\t\t\t${chan_name}"
    done
}

get_num()
{
    if [ "$#" -ne 1 ]; then
        return 1
    fi
    for i in ${ChanList[@]}; do
        if [ "${1}" = "$(echo $i | cut -d ":" -f1)" ]; then
            echo "$(echo $i | cut -d ":" -f3)"
            return 0
        else
            continue
        fi
    done
    return 1
}

get_name()
{
    if [ "$#" -ne 1 ]; then
        return 1
    fi
    for i in ${ChanList[@]}; do
        if [ "${1}" = "$(echo $i | cut -d ":" -f1)" ]; then
            echo "$(echo $i | cut -d ":" -f2)"
            return 0
        else
            continue
        fi
    done
    return 1
}

record()
{
    if [ "$#" -lt 1 ]; then
        return 1
    fi
    if ps -edf | grep -v grep | grep "vlc -I dummy --volume=1024 --sout" &> /dev/null; then
        echo -e "${FG_RED_B}Another process is currently recording, Cannot launch a new one, sorry."
        return 1
    fi
    number="$(get_num ${1})"
    name="$(get_name ${1})"
    if [ -z "${number}" -o -z "${name}" ]; then
        echo -e "${FG_RED_B}Channel ${1} does not exist.${FG_CLEAR}"
        list
        exit 1
    fi
    if [ ! -d "${DESTDIR}/${name}" ]; then
        mkdir -p "${DESTDIR}/${name}"
    fi
    echo -e "${FG_BLUE_B}Recording $(echo ${name} | sed -e "s@_@ @g") at ${DESTDIR}/${name}/${Now}.avi${FG_CLEAR}"
    if [ "${TRANSCODE}" = "yes" ]; then
        ( vlc -I dummy --volume="${volume}" --sout="#transcode{vcodec=${vcodec},vb=${video_bitrate},scale=${scale},acodec=${audio_codec},ab=${audio_bitrate},channels=${channels}}:duplicate{dst=std{access=file,mux=${mux},dst=\"${DESTDIR}/${name}/${Now}.avi\"}}" rtsp://mafreebox.freebox.fr/freeboxtv/${number} &) &> /dev/null
    else
        ( vlc -I dummy --volume="${volume}" --sout="#duplicate{dst=std{access=file,mux=${mux},dst=\"${DESTDIR}/${name}/${Now}.avi\"}}" rtsp://mafreebox.freebox.fr/freeboxtv/${number} &) &> /dev/null
    fi

    if [ ! -z "${2}" ]; then
        echo -e "${FG_BLUE_B}Auto stoping after ${2} minute(s).${FG_CLEAR}"
        ( ( sleep "${2}m"; $0 stop ) &) &> /dev/null
    fi
    exit 0
}

stop()
{
    if ps -edf | grep -v grep | grep "vlc -I dummy --volume=1024 --sout" &> /dev/null; then
        echo -e "${FG_BLUE_B}Stopping recording process.${FG_CLEAR}"
        ps -edf | grep -v grep | grep "vlc -I dummy --volume=1024 --sout" | awk '{print $2}' | xargs kill -TERM
    else
        echo -e "${FG_YELLOW_B}There isn't any recording process running, nothing has been stopped.${FG_CLEAR}"
    fi
}


if [ "$#" -lt 1 ]; then
    usage
    exit 1
fi

case ${1} in
    "list")
        list
        exit 0
        ;;
    "record")
        if [ "$#" -lt "2" ]; then
            usage
            exit 1
        fi
        shift
        record $@
        exit 0
        ;;
    "stop")
        stop
        exit $?
        ;;
    *)
        usage
        exit 1
        ;;
esac
