" ,----
" | autocommands
" `----

if has("autocmd")
    augroup mail
        au!
        au FileType mail set tw=70
        au FileType mail set expandtab
        au FileType mail set tabstop=3
        au FileType mail set comments+=n:\|  " '|' is a quote char.
        au FileType mail set comments+=n:%   " '%' as well.
        au FileType mail set noautoindent
        au FileType mail set nosmartindent
        " insert vim signature
        au FileType mail let @"="X-Editor: Vim-".version." http://www.vim.org\n"|exe 'norm1G}""P'
        "  replace empty quoted lines with empty lines
        au FileType mail exe "normal :%s/^>[[:space:]\%\|\#>]\\+$//e\<CR>"
        " remove own mail address from cc or bcc
        au FileType mail exe "normal :g/^Bcc: \\|^Cc: /s/wael@nasreddine\.com, //egi\<CR>"
        au FileType mail exe "normal :g/^Bcc: \\|^Cc: /s/mla@nasreddine\.com, //egi\<CR>"
        au FileType mail exe "normal :g/^Bcc: \\|^Cc: /s/wael\.nasreddine@gmail\.com, //egi\<CR>"
        au FileType mail exe "normal :g/^Bcc: \\|^Cc: /s/wael_nasreddine@hotmail\.com, //egi\<CR>"
        au FileType mail exe "normal :g/^Bcc: \\|^Cc: /s/smo-team@gmail\.com, //egi\<CR>"
        au FileType mail exe "normal :g/^Bcc: \\|^Cc: /s/wael\.nasreddine@free\.fr, //egi\<CR>"
        au FileType mail exe "normal :g/^Bcc: \\|^Cc: /s/my\.domains@free\.fr, //egi\<CR>"
        au FileType mail exe "normal :g/^Bcc: \\|^Cc: /s/nasreddine_wael@yahoo\.com, //egi\<CR>"
        au FileType mail exe "normal :g/^Bcc: \\|^Cc: /s/, wael@nasreddine\.com//egi\<CR>"
        au FileType mail exe "normal :g/^Bcc: \\|^Cc: /s/, mla@nasreddine\.com//egi\<CR>"
        au FileType mail exe "normal :g/^Bcc: \\|^Cc: /s/, wael\.nasreddine@gmail\.com//egi\<CR>"
        au FileType mail exe "normal :g/^Bcc: \\|^Cc: /s/, wael_nasreddine@hotmail\.com//egi\<CR>"
        au FileType mail exe "normal :g/^Bcc: \\|^Cc: /s/, smo-team@gmail\.com//egi\<CR>"
        au FileType mail exe "normal :g/^Bcc: \\|^Cc: /s/, wael\.nasreddine@free\.fr//egi\<CR>"
        au FileType mail exe "normal :g/^Bcc: \\|^Cc: /s/, my\.domains@free\.fr//egi\<CR>"
        au FileType mail exe "normal :g/^Bcc: \\|^Cc: /s/, nasreddine_wael@yahoo\.com//egi\<CR>"
    augroup end

    augroup php
        au!
        au FileType php setlocal noeol
        au FileType php setlocal binary
        au FileType php set expandtab
        au FileType php set tabstop=4
        au FileType php set softtabstop=2
        au FileType php set shiftwidth=2
        au FileType php set comments=sl:/**,mb:*,elx:*
    augroup end

    augroup ruby
        au!
        au FileType ruby setlocal noeol
        au FileType ruby setlocal binary
        au FileType ruby set expandtab
        au FileType ruby set tabstop=2
        au FileType ruby set softtabstop=2
        au FileType ruby set shiftwidth=2
    augroup end

    augroup news
        au!
        au FileType news set tw=60
        au FileType news set expandtab
        au FileType news set tabstop=3
        au FileType news set dict=~/News/active
        autocmd BufNewFile,BufRead  .followup,.article  iab Yme <cr>Wael Nasreddine
    augroup end

    au FileType diary set tw=70
    au BufReadCmd *.jar,*.war,*.ear,*.sar,*.rar call zip#Browse(expand("<amatch>"))

    " jump to last line if viminfo exists
    au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal g`\"" | endif
    " ensure every file does syntax highlighting (full)
    au BufEnter * syntax sync fromstart
    " never spell check TagList buffer
    au BufEnter * if match(bufname("%"), "Tag_List") != -1 | set nospell | endif

    " readonly files should make buffer unreadable
    autocmd BufReadPost * call UpdateModifiable()

    " Load eruby
	augroup filetypedetect
		au! BufRead,BufNewFile *.rhtml		setfiletype eruby
		au! BufRead,BufNewFile *.html.erb		setfiletype eruby
	augroup end

    augroup skeleton
        au!
        au BufNewFile *.sh   silent! 0r ~/.vim/skel/sh
        au BufNewFile *.zsh  silent! 0r ~/.vim/skel/zsh
        au BufNewFile *.py   silent! 0r ~/.vim/skel/python
        au BufNewFile *.rb   silent! 0r ~/.vim/skel/ruby
        au BufNewFile *.html silent! 0r ~/.vim/skel/html
        au BufNewFile *.c,*.cc,*.cxx,*.cpp silent! 0r ~/.vim/skel/cc
        au BufNewFile *.h,*.hh,*.hxx,*.hpp silent! 0r ~/.vim/skel/hh
    augroup end

    if exists("+omnifunc")
        au Filetype *
            \   if &omnifunc == "" |
            \           setlocal omnifunc=syntaxcomplete#Complete |
            \   endif
    endif

    augroup c_cpp
        au!
        au BufWrite   *.c,*.cc,*.cxx,*.cpp,*.h,*.hh,*.hxx,*.hpp call UpdateCTags()
        au BufReadPre *.c,*.cc,*.cxx,*.cpp,*.h,*.hh,*.hxx,*.hpp set tags=~/.vim/ctags
        "au BufReadPre *.c,*.cc,*.cxx,*.cpp,*.h,*.hh,*.hxx,*.hpp compiler scons
        au BufNewFile *.h,*.hh,*.hxx,*.hpp call AddIfndefGuard()
        au FileType c set tabstop=2
        au FileType c set softtabstop=2
        au FileType c set shiftwidth=2
        au FileType c set expandtab
        au FileType cpp set tabstop=2
        au FileType cpp set softtabstop=2
        au FileType cpp set shiftwidth=2
        au FileType cpp set expandtab
    augroup end

    " used to track the quickfix window
    augroup QFixToggle
      au!
      au BufWinEnter quickfix let g:qfix_win = bufnr("$")
      au BufWinLeave * if exists("g:qfix_win") && expand("<abuf>") == g:qfix_win | unlet! g:qfix_win | endif
    augroup end

    au FileType vo_base source ~/.vim/statusline

    "au VimEnter * silent! :call LoadSession()
    "au VimLeave * :call MakeSession()

    " Always show mapping position
    au VimEnter * :ShowMarksToggle

    " on new files, goto end of file
    au BufNewFile * exe "normal G"

    "Highlight trailing backspaces =)
    au Syntax * syn match Error /\s\+$/ | syn match Error /^\s* \t\s*/
endif

" vim:syntax=vim sw=4 ts=4 expandtab
