" functions need to be sourced only once per session
if exists("s:loaded_personal_functions")
  finish
endif
let s:loaded_personal_functions = 1

"" ----------------------------------------------------------------------------
""  Functions
"" ----------------------------------------------------------------------------

fun! GZIP_read(cmd)
let ch_save = &ch
        set ch=2
        execute "'[,']!" . a:cmd
        set nobin
        let &ch = ch_save
        execute ":doautocmd BufReadPost " . expand("%:r")
endfun

" Datei wieder komprimieren mit "cmd"
fun! GZIP_write(cmd)
        if rename(expand("<afile>"), expand("<afile>:r")) == 0
                execute "!" . a:cmd . " <afile>:r"
        endif
endfun

" Datei anhängen mit "cmd"
fun! GZIP_appre(cmd)
        execute "!" . a:cmd . " <afile>"
        call rename(expand("<afile>:r"), expand("<afile>"))
endfun


" fun! ToggleStatusLine()
"   let g:StatusLinesCurrent=g:StatusLinesCurrent+1
"   if (!exists("g:StatusLines" . g:StatusLinesCurrent))
"     let g:StatusLinesCurrent=0
"   endif
"   let &statusline=g:StatusLines{g:StatusLinesCurrent}
" endfun

function! MakeSession()
    let b:sessiondir = $HOME . "/.vim/sessions" . getcwd()
    if (filewritable(b:sessiondir) != 2)
        exe 'silent !mkdir -p ' b:sessiondir
        redraw!
    endif
    let b:filename = b:sessiondir . '/session.vim'
    exe "mksession! " . b:filename
endfunction

function! LoadSession()
    let b:sessiondir  = $HOME . "/.vim/sessions" . getcwd()
    let b:sessionfile = b:sessiondir . "/session.vim"
    if (filereadable(b:sessionfile))
        exe 'source ' b:sessionfile
    else
        echo "No session loaded."
    endif
endfunction

function UpdateModifiable()
    if !exists("b:setmodifiable")
        let b:setmodifiable = 0
    endif
    if &readonly
        if &modifiable
            setlocal nomodifiable
            let b:setmodifiable = 1
        endif
    else
        if b:setmodifiable
            setlocal modifiable
        endif
    endif
endfunction

function! UpdateCTags()
    let _r_ = system('ctags -a -o ~/.ctags --c++-kinds=+p --fields=+iaS --extra=+q --languages=c++ --tag-relative=yes' . expand("%:p"))
    unlet _r_
endfunction

function! UpdatePHPCTags()
    let _r_ = system('ctags -a -o ~/.ctags -h ".php" -R --exclude="\.svn" --exclude="_darcs" --exclude="\.bzr" --exclude="\.vim" --exclude=".git" --totals=yes --tag-relative=yes --PHP-kinds=+cf --regex-PHP="/abstract class ([^ ]*)/\1/c/" --regex-PHP="/interface ([^ ]*)/\1/c/" --regex-PHP="/(public |static |abstract |protected |private )+function ([^ (]*)/\2/f/"'  . expand("%:p"))
    unlet _r_
endfunction

" toggles the quickfix window.
command -bang -nargs=? ToggleQFix call ToggleQuickFix(<bang>0)
function! ToggleQuickFix(forced)
  if exists("g:qfix_win") && a:forced == 0
    cclose
  else
    copen
  endif
endfunction

function AddIfndefGuard()
    let s:header_guard= strpart(toupper(system("pwgen -s 20 1")), 0, 20)

    call append(line('$'), "#ifndef ".s:header_guard)
    call append(line('$'), "#define ".s:header_guard)
    call append(line('$'), "")

    call append(line('$'), "")
    call append(line('$'), "#endif // ".s:header_guard)
endfunction

" Automatic parenthesis
" This closes parenthesis automatically for you. When you press "(", VIM will
" insert ")" automatically and place the cursor between them. If you press ")"
" right before a closing parenthesis, VIM just advances the cursor over it.
" Taken from http://juliano.info/en/Blog:Memory_Leak/Improve_your_efficience_with_VIM
function! <SID>J_CloseParenWrapper(ch)
    let line = getline('.')
    let col = col('.') - 1
    if line[col] =~ a:ch
        return "\<Delete>" . a:ch
    else
        return a:ch
    endif
endfunction
inoremap <buffer> ( ()<Left>
inoremap <buffer> ) <C-R>=<SID>J_CloseParenWrapper(')')<CR>
inoremap <buffer> <leader>( (
inoremap <buffer> <leader>) )
inoremap <buffer> [ []<Left>
inoremap <buffer> ] <C-R>=<SID>J_CloseParenWrapper(']')<CR>
inoremap <buffer> <leader>[ [
inoremap <buffer> <leader>] ]
inoremap <buffer> {<CR> {<CR>}<Up><End><CR>

" vim:syntax=vim sw=4 ts=4 expandtab
