# vim: set ft=sh ts=4 sts=4 sw=4 expandtab:
#
# $Id: exports 1429 2009-05-31 03:56:15Z wael $

# Sanity Check.
if [ x"${HOME}" = "x" ]; then
    export HOME=$(cd ~ ; pwd)
fi
if [ x"${HOSTNAME}" = "x" ]; then
    export HOSTNAME=$(hostname)
fi

# ME :D
export FULLNAME="Wael Nasreddine"
export EMAIL="wael.nasreddine@gmail.com"

# Export the system type.
export SYSTEM="$( uname )"

# source the language file
source "${HOME}/.shells/lang"

# Find out where which is located and export it as W.
for BinDir in /usr/bin /bin /usr/local/bin; do
    if [ -x "${BinDir}/which" ]; then
        export W="${BinDir}/which"
        break
    fi
done
unset BinDir

# Some Stuf to the History
export HISTCONTROL=ignorespace:ignoredups   # Don't save duplicated stuff
export HISTIGNORE="&:[bf]g:exit"            # Ignore some commands
export HISTFILESIZE=10000                   # History Size
export HISTSIZE=10000                       #   //     //
export INPUTRC=~/.inputrc                   # Inputrc file
export EDITOR=vim                           # Default Editor, VIM of course
export VISUAL=vim                           # Default Visual
export MAIL=~/.mail                         # Default email folder
export MAILCHECK=0                          # Disable mail checking.
export IGNOREEOF=3
export PAGER=least                          # Use an inernally defined function
                                            # which will either cat or LEAST_PAGER
                                            # depending on the length of the output..
if ${W} most &> /dev/null; then
    export LEAST_PAGER=most                 # the PAGER that'll be used by least
    export MANPAGER=most                    # Man page viewer
else
    export LEAST_PAGER=less                 # the PAGER that'll be used by least
    export MANPAGER=less                    # Man page viewer
fi

# Some default programs
if [ "${HOSTNAME}" = "phoenix.nasreddine.info" -a "${SYSTEM}" = "FreeBSD" ]; then
    export BROWSER="firefox3"
elif  [ "${HOSTNAME}" = "phoenix.nasreddine.info" -a "${SYSTEM}" = "Linux" ]; then
    export BROWSER="chromium"
elif  [ "${HOSTNAME}" = "cadmus.nasreddine.info" ]; then
    export BROWSER="chromium"
fi
export TERMCMD="urxvt"
export VIDEO_PLAYER="vlc"
export AUDIO_PLAYER="audacious"

# PACKAGER value for makepkg
export PACKAGER='Wael Nasreddine <wael.nasreddine@free.fr>'

# Use openoffice with gnome look.
export OOO_FORCE_DESKTOP=gnome

# Default SVN Editor
export SVN_EDITOR="${EDITOR}"

# Export SVN_SSH
export SVN_SSH="ssh -i ${HOME}/.ssh/id_rsa.subversion"

# Export DISTCC_DIR so distccmon-gnome works
export DISTCC_DIR=/var/tmp/portage/.distcc

# export NNTP Server
export NNTPSERVER='aioe.cjb.net'

# Export the default options to pass to devtodo.
export TODO_OPTIONS="--timeout --summary"

# Add /sbin and /usr/sbin
if ! echo "${PATH}" | grep -q "sbin"; then
    export PATH="${PATH}:/usr/local/sbin:/usr/sbin:/sbin"
fi

# If we don't have distcc or ccache, add them!
if [ -d "/usr/lib/distcc/bin" ] && ! echo "${PATH}" | grep -q "/usr/lib/distcc/bin"; then
    export PATH="/usr/lib/distcc/bin:${PATH}"
elif [ -d "/usr/local/libexec/distcc" ] && ! echo "${PATH}" | grep -q "/usr/local/libexec/distcc"; then
    export PATH="/usr/local/libexec/distcc:${PATH}"
fi
if [ -d "/usr/lib/ccache/bin" ] && ! echo "${PATH}" | grep -q "/usr/lib/ccache/bin"; then
    export PATH="/usr/lib/ccache/bin:${PATH}"
fi

# export any bin folder in ~/opt/
if [ `find ${HOME}/.filesystem/opt/ -maxdepth 2 -name bin -type d | wc -l` -gt 0 ]; then
    for i in `find ${HOME}/.filesystem/opt/ -maxdepth 2 -name bin -type d`; do
    export PATH="${i}:${PATH}"
    done
fi

# Export my local bin directory
# export it at first, so it will be checked first!
MY_PATH=""
if [ -d "${HOME}/.filesystem/bin" ]; then
  for dir in `find "${HOME}/.filesystem/bin" -type d -name bin`; do
    MY_PATH="${MY_PATH}:${dir}"
  done
fi
if [ -d "${HOME}/.filesystem/usr/bin" ]; then
  for dir in `find "${HOME}/.filesystem/usr/bin" -type d -name bin`; do
    MY_PATH="${MY_PATH}:${dir}"
  done
fi
export MY_PATH="${MY_PATH##:}"
export PATH="/usr/local/lib/cw:${MY_PATH}:${PATH}"
unset dir

# Source rvm
source /usr/local/rvm/scripts/rvm

# MANPATH
# On FreeBSD, MANPATH is not defined but one can define it
# using then manpath command, so if this command exists, export
# MANPATH using it, but this command will not parse /etc/manpath.config
# unless MANPATH is not defined so unset it before setting it using
# manpath.
if [ -x "`${W} manpath`" ]; then
    unset MANPATH
    MANPATH="`manpath`"
fi
MANPATH="${HOME}/.filesystem/man:${MANPATH}"

# Hostname.
if [ "${SYSTEM}" = "Linux" ]; then
    export HOSTNAME="$( hostname -f )"
else
    export HOSTNAME="$( hostname )"     # FIX: we need FQDN!
fi

# LS options
# Sometimes I can't assign a new value for LS_OPTIONS so make sure
# errors get discarded
export LS_OPTIONS='-h'
if [ "${SYSTEM}" = "Linux" ]; then
    # Do we have GNU ls of a new enough version for color?
    if ls --help 2>/dev/null | grep -q -- '--color=' 2> /dev/null; then
        export LS_OPTIONS="${LS_OPTIONS} --color=always"
    fi
elif [ "${SYSTEM}" = "FreeBSD" -o "${SYSTEM}" = "Darwin" ]; then
    export LS_OPTIONS="${LS_OPTIONS} -G"
fi

# CDPATH is like PATH but works for cd command
#export CDPATH=".:~:/:/usr/portage"

# Export my phone bluetooth MAC address
export eMxyzptlk='00:1D:6E:52:8B:F7'

# paludis have a hook that generateÑ• metadata a lot faster than plaudis does
# so disable paludis metadata generation
#PALUDIS_NO_WRITE_CACHE_CLEAN=yes

# Use thoughtfully the GTK+ runtime environment (lib & conf files) from
# VMware otherwize I get the below error:
# /opt/vmware/workstation/lib/lib/libvmwareui.so.0/libvmwareui.so.0:
#   undefined symbol: _ZThn12_N4view10FieldEntry17delete_text_vfuncEii
#export VMWARE_USE_SHIPPED_GTK="yes"

# watch for people
watch=(notme)                   # watch for everybody but me
LOGCHECK=300                    # check every 5 min for login/logout activity

# The format of login / logout reports if the watch parameter is set.
# Default is `%n has %a %l from %m'.
# Recognizes the following escape sequences:
#   %n = name of the user that logged in/out.
#   %a = observed action, i.e. "logged on" or "logged off".
#   %l = line (tty) the user is logged in on.
#   %M = full hostname of the remote host.
#   %m = hostname up to the first `.'.
#   %t or %@ = time, in 12-hour, am/pm format.
#   %w = date in `day-dd' format.
#   %W = date in `mm/dd/yy' format.
#   %D = date in `yy-mm-dd' format.
# WATCHFMT='%n %a %l from %m at %t.'
# WATCHFMT='*knock* *knock* Follow the white rabbit => %n %a %l from %m at %t.'
# WATCHFTM=print '\e[1;35m%B[%b\e[1;32m%B%n%b\e[1;35m%B]%b \e[1;34m%U%a%u \e[1;35mfrom terminal \e[1;31m%M \e[1;35mat \e[1;33m%U%T%u\e[0m''
#WATCHFMT="[%B%t%b] %B%n%b has %a %B%l%b from %B%M%b"
WATCHFMT="%B->%b %n has just %a %(l:tty%l:%U-Ghost-%u)%(m: from %m:)"

# Determining where we are and exporting some variables.
if [ -e /proc/cmdline ]; then
    if grep -q 'location=' /proc/cmdline && [ -z "${LOCATION}" ]; then
        export LOCATION="$(cat /proc/cmdline | sed -e "s@.*location=\([a-zA-Z0-9]*\).*@\1@g")"
    fi
fi

# I don't know why and what is the reason behind this, but if SHELL is not an absolute path and you try
# to use SSH with corkscrew, you will get 'zsh: no shuch file or directory', so it needs to be an absolute path!!
export SHELL="$( ${W} $(basename ${SHELL}) )"

export ZEND_TOOL_INCLUDE_PATH_PREPEND=/home/wael/src/projects/fwngame/library

# Force libflashsupport to use pulse
# See: http://pulseaudio.revolutionlinux.com/PulseAudio
#export FLASH_FORCE_PULSEAUDIO=1

# SDL for PulseAudio
#export SDL_AUDIODRIVER="pulse"

# Eclim
export ECLIM_ECLIPSE_HOME=/usr/share/eclipse

# JDK_HOME
if [ -z "${JDK_HOME}" ]; then
    if [ -x "$(${W} java 2> /dev/null)" ]; then
        temp="$(${W} java 2> /dev/null)"
        export JDK_HOME="$(cd `dirname $temp`/.. && pwd)"
        unset temp
    fi
fi
