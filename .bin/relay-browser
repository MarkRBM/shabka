#!/usr/bin/zsh
#
#  vim:ft=sh:
#
#  Copyright (c) 2010-2017 Wael Nasreddine <wael.nasreddine@gmail.com>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
#  USA.
#

source "${HOME}/.zsh/functions.zsh"

function help()
{
	print_info "${log_depth}" "USAGE: relay-browser [options] <url>"
	print_info "${log_depth}" "\t -h, --help                - this message"
	print_info "${log_depth}" "\t -L, --log-depth           - change the depth of the log Default: ${log_depth}"
	print_info "${log_depth}" "\t -p, --profile             - the profile to use. This is only relevant if a new session is going to be started"
}

log_depth="0"
args=""

while [[ $# -ge 1 ]]; do
	case "${1}" in
		-h|--help)
			help
			exit 0
			;;
		--log-depth)
			log_depth="${2}"
			if [[ -z "${log_depth}" ]]; then
				print_error "${log_depth}" "--log-depth requires an argument"
				help
				exit 1
			fi
			shift 2
			;;
		-p|--profile)
			profile="${2}"
			if [[ -z "${profile}" ]]; then
				print_error "${log_depth}" "--profile requires an argument"
				help
				exit 1
			fi
			shift 2
			;;
		*)
			args=( ${@} )
			break
			;;
	esac
done

PROFILES_PATH="${HOME}/.config/chromium/profiles"

if [[ -z "${profile}" ]]; then
	items=""
	sep=""
	for i in $PROFILES_PATH/*; do;
		if [[ -d "${i}" ]]; then
			items="${items}${sep}$(basename "${i}")"
			sep="\n"
		fi
	done
	profile=$(rofi -dmenu < <(echo -e "${items}"))
fi

if [[ ! -d "${PROFILES_PATH}/${profile}" ]]; then
	print_warning 0 "the selected profile does not exists, creating one"
	mkdir -p "${PROFILES_PATH}/${profile}"
fi

(exec chromium --user-data-dir="${PROFILES_PATH}/${profile}" "${args[@]}" &>/dev/null)&
