bash_prompt_command() {
    # How many characters of the $PWD should be kept
    local pwdmaxlen=25
    # Indicate that there has been dir truncation
    local trunc_symbol=".."
    local dir=${PWD##*/}
    pwdmaxlen=$(( ( pwdmaxlen < ${#dir} ) ? ${#dir} : pwdmaxlen ))
    NEW_PWD=${PWD/#$HOME/\~}
    local pwdoffset=$(( ${#NEW_PWD} - pwdmaxlen ))
    if [ ${pwdoffset} -gt "0" ]
    then
        NEW_PWD=${NEW_PWD:$pwdoffset:$pwdmaxlen}
        NEW_PWD=${trunc_symbol}/${NEW_PWD#*/}
    fi
}

# Setting prompt command
PROMPT_COMMAND=bash_prompt_command
UC="${FG_WHITE}"
[ $UID -eq "0" ] && UC="${FG_RED}"
PS1="\[${UC}\](\[${FG_BLUE_B}\]\$?\[${UC}\])\[${FG_BLUE_B}\][\[${UC}\]\u\[${FG_BLUE_B}\]@\[${UC}\]\h \[${FG_GREEN_B}\]\${NEW_PWD}\[${FG_BLUE_B}\]]\[${UC}\]\\$ \[${FG_CLEAR}\]"
unset UC

# X Terminal titles
case "$TERM" in
    xterm*|rxvt*)
        PROMPT_COMMAND='bash_prompt_command; echo -ne "\033]0;${USER}@${HOSTNAME}: ${NEW_PWD}\007"'
        ;;
#    screen*)
#        trap 'echo -ne "\ek${BASH_COMMAND%%\ *}\e\\"' DEBUG
#        PROMPT_COMMAND='bash_prompt_command; echo -ne "\ek${NEW_PWD}\e\\"'
#        ;;
    *)
        ;;
esac
